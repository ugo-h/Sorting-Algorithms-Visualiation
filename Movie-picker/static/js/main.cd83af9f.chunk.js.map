{"version":3,"sources":["Components/Header/Header.js","Components/Hero/Hero.js","Components/Movie/Movie.js","Components/Modal/Modal.js","Components/Options/Options.js","config.js","App.js","serviceWorker.js","index.js"],"names":["header","props","className","onClick","resetMovieHandler","hero","isLoading","searchMovieHandler","toggleModalHandler","movie","console","log","genres","src","posterUrl","alt","nameRu","year","rating","filmLength","map","genre","description","href","webUrl","modal","show","children","toggleHandler","ReactDOM","createPortal","key","document","getElementById","options","onChange","filter","value","data-set","option","id","pages","a","fetch","res","json","apiKey","API_KEY","getApiKey","App","state","showModal","bind","selectGenreHandler","this","setState","getDataFromKinopoisk","page","Math","trunc","random","headers","data","movieRandomId","films","length","filmId","getMovieDetailsFromKinopoisk","ev","target","split","Options","Component","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd83af9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst header = props => (\r\n    <header className=\"header\">\r\n        <h2 onClick={props.resetMovieHandler} className=\"logo\">Movie Picker</h2>\r\n    </header>\r\n)\r\n\r\nexport default header;","import React from 'react';\r\nimport './Hero.css';\r\n\r\nconst hero = ({isLoading, searchMovieHandler, toggleModalHandler}) => {\r\n    return(\r\n        <div className=\"hero\">\r\n            <h1 className=\"hero__title\">Never waste hours to find the perfect movie again!</h1>\r\n            {isLoading?\r\n                'LOADING....':    \r\n                <button onClick={searchMovieHandler} className=\"btn--call-to-action\">Pick a Movie</button>\r\n            }\r\n            <button onClick={toggleModalHandler} className=\"btn--configuration btn-open-filters\" >Configure Filters</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default hero;","import React from 'react';\r\nimport './Movie.css';\r\n\r\nconst movie = ({movie}) => {\r\n    console.log(movie.genres)\r\n    return(\r\n    <div className=\"Movie\">\r\n        <img className=\"Movie__poster\" src={movie.posterUrl? movie.posterUrl: 'https://vignette.wikia.nocookie.net/houseki-no-kuni/images/3/3b/Missingimage.png/revision/latest?cb=20190328111547&path-prefix=ru'} alt=\"Poster\"></img> \r\n        <div className=\"Movie__content\">\r\n            <h2 className=\"Movie__content__title\">{movie.nameRu} ({movie.year})</h2>\r\n            <ul className=\"Movie__content__header\">\r\n                <li className=\"Movie__rating Movie__content__header__el\">Рейтинг: {movie.rating}</li>\r\n                {/* <li className=\"Movie__content__header__el\">By {movie.Director}</li> */}\r\n                <li className=\"Movie__content__header__el\">Хронометраж: {movie.filmLength}</li>\r\n                <li className=\"Movie__content__header__el\">Жанры: {movie.genres.map(genre => `${genre.genre}, `)}</li>\r\n            </ul>\r\n            <p className=\"Movie__content__description\">{movie.description}</p>\r\n            <a className=\"Movie__btn btn--call-to-action\" href={movie.webUrl}>Подробнее на Кинопоиске</a>\r\n        </div>\r\n\r\n\r\n        \r\n    </div>\r\n)}\r\n\r\nexport default movie;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = ({show, children, toggleHandler, className}) => {\r\n    return ReactDOM.createPortal(\r\n        show?\r\n        [\r\n        <div className={`Modal ${className}`} key=\"1\">\r\n            {children}\r\n        </div>,\r\n        <div className=\"backdrop\" key=\"2\" onClick={toggleHandler}></div>\r\n        ] :'',\r\n        document.getElementById('modal-root')\r\n        )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\nimport './Genres.css';\r\n\r\nconst options = ({options, onChange, filter}) => {\r\n    return (\r\n        <select onChange={onChange} className=\"Genres-list\">\r\n            <option value=\"0,20\" data-set>Любой</option>\r\n            {options.map(option => <option value={`${option.id},${option.pages||20}`} className=\"Genres-list__item\">{`${option[filter]} `}</option>)}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default options;","export const genres = [\r\n    {id: 1750, genre: \"аниме\"},\r\n    {id: 22, genre: \"биография\"},\r\n    {id: 3, genre: \"боевик\"},\r\n    {id: 13, genre: \"вестерн\"},\r\n    {id: 19, genre: \"военный\"},\r\n    {id: 17, genre: \"детектив\"},\r\n    {id: 456, genre: \"детский\", pages:2},\r\n    {id: 20, genre: \"для взрослых\", pages:1},\r\n    {id: 12, genre: \"документальный\"},\r\n    {id: 8, genre: \"драма\"},\r\n    {id: 23, genre: \"история\"},\r\n    {id: 6, genre: \"комедия\"},\r\n    {id: 15, genre: \"короткометражка\"},\r\n    {id: 16, genre: \"криминал\"},\r\n    {id: 7, genre: \"мелодрама\"},\r\n    {id: 21, genre: \"музыка\"},\r\n    {id: 14, genre: \"мультфильм\"},\r\n    {id: 9, genre: \"мюзикл\"},\r\n    {id: 10, genre: \"приключения\"},\r\n    {id: 11, genre: \"семейный\"},\r\n    {id: 24, genre: \"спорт\"},\r\n    {id: 4, genre: \"триллер\"},\r\n    {id: 1, genre: \"ужасы\"},\r\n    {id: 2, genre: \"фантастика\"},\r\n    {id: 18, genre: \"фильм-нуар\", pages:4},\r\n    {id: 5, genre: \"фэнтези\"},\r\n]","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Hero from './Components/Hero/Hero';\nimport Movie from './Components/Movie/Movie';\nimport Modal from './Components/Modal/Modal';\nimport Options from './Components/Options/Options'\nimport { genres } from './config';\n\nasync function getApiKey() {\n  const res = await fetch('https://movie-proxy-api.glitch.me/getkey');\n  const apiKey =  await res.json();\n  return apiKey;\n};\n\nconst API_KEY = getApiKey();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null,\n      isLoading: false,\n      showModal: false,\n      options: {\n        genre: 0,\n        pages: 20\n      }\n    };\n    this.searchMovieHandler = this.searchMovieHandler.bind(this);\n    this.resetMovieHandler = this.resetMovieHandler.bind(this);\n    this.toggleModalHandler = this.toggleModalHandler.bind(this);\n    this.selectGenreHandler = this.selectGenreHandler.bind(this);\n  };\n\n  toggleModalHandler() {\n    this.setState({\n      showModal: !this.state.showModal\n    })\n  }\n  \n  async componentDidMount() {\n    await API_KEY;\n    console.log('API_KEY LOADED')\n  }\n\n  resetMovieHandler() {\n    this.setState({movie: null});\n  }\n\n  async searchMovieHandler() {\n    this.setState({isLoading: true});\n    const movie = await this.getDataFromKinopoisk();\n\n    this.setState({isLoading: false, movie});\n  };\n\n  async getDataFromKinopoisk() {\n    const page = Math.trunc(Math.random() * this.state.options.pages)+1;\n    // const page = this.state.options.pages;\n    const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-filters?genre=${this.state.options.genre}&ratingFrom=7&type=FILM&page=${page}`, {\n      headers:{\n        'X-API-KEY': API_KEY\n      }\n    });\n    const data = await res.json();\n    const movieRandomId = Math.trunc(Math.random() * data.films.length);\n    const {rating, filmId} = data.films[movieRandomId];\n    const movie = await this.getMovieDetailsFromKinopoisk(filmId);\n    movie.rating = rating;\n    return movie;\n  }\n\n  async getMovieDetailsFromKinopoisk(id) {\n    const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}`, {\n      headers:{\n        'X-API-KEY': API_KEY\n      }\n    });\n    const data = await res.json();\n    return data.data;\n  }\n\n  selectGenreHandler(ev) {\n    const [genre, pages] = ev.target.value.split(',');\n    this.setState({options: {genre: genre, pages}})\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Header resetMovieHandler={this.resetMovieHandler}/>\n          {this.state.movie? <Movie movie={this.state.movie}/>:\n          <Hero searchMovieHandler={this.searchMovieHandler} toggleModalHandler={this.toggleModalHandler} isLoading={this.state.isLoading}/>\n          }\n          <Modal className=\"Preferences-modal\" show={this.state.showModal} toggleHandler={this.toggleModalHandler}>\n            <h3>Preferences</h3>\n            <label>Жанр:</label>\n            <Options onChange={this.selectGenreHandler} options={genres} filter=\"genre\"/>\n            <button onClick={this.toggleModalHandler}>Apply</button>\n          </Modal>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}