{"version":3,"sources":["Components/Helper/Axillury.js","Components/Modal/Modal.js","Components/Delete-btn/Button.js","Components/Tasks/Task/Task.js","Components/Tasks/TasksList.js","Components/NotePreview/NotePreview.js","Containers/NotesList/NotesList.js","routes/Home/Home.js","Containers/NoteForm/NoteForm.js","routes/Note/Note.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","modalConfirmDecline","isShown","title","onConfirm","onDecline","ReactDom","createPortal","className","onClick","document","getElementById","SIZES","Button","type","url","size","clickHandler","this","form","alt","src","Component","Delete","Undo","Redo","task","content","disabled","deleteHandler","checkHandler","checked","isChecked","value","onChange","id","from","htmlFor","tasksList","tasks","length","map","index","key","notePreview","to","NotesList","state","notes","showModal","getNotesAndSetToState","JSON","parse","localStorage","getItem","setState","deleteNote","updatedNoted","filter","note","setItem","stringify","bind","confirmHandler","declineHandler","home","pops","NoteForm","history","historyPointer","allowEditing","allowAddingTasks","match","params","noteData","getDataFromLocalStorage","addToHistory","find","event","input","target","name","preventDefault","existingNoteIndex","findIndex","exNote","Date","now","toString","push","ev","addTask","newTasks","taskIndex","obj","slice","allowUndo","allowRedo","onSubmit","submitHandler","undoHandler","style","width","redoHandler","onBlur","inputChangeHandler","onKeyDown","submitTaskHandler","withRouter","Note","useRouteMatch","path","header","portal","createElement","body","appendChild","App","Home","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd5a7954.chunk.js","sourcesContent":["const aux = props => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './Modal.css'\r\nimport Aux from '../Helper/Axillury';\r\n\r\n\r\nconst modalConfirmDecline = ({ isShown, title, children, onConfirm, onDecline }) => {\r\n    return ReactDom.createPortal(\r\n        <Aux>\r\n       {isShown?\r\n        <Aux>\r\n        <div className=\"Backdrop\"></div>\r\n        <div className=\"Modal Utility__card\">\r\n            <h2 className=\"Modal__title\">{title}</h2>\r\n            <p className=\"Modal_body\">{children}</p>\r\n            <div className=\"Modal__buttons\">\r\n                <button className=\"Utility__btn--danger\"onClick={onConfirm}>Delete</button>\r\n                <button  className=\"Utility__btn\" onClick={onDecline}>Cancel</button>\r\n            </div>\r\n        </div>\r\n        </Aux>\r\n        : ''}\r\n        </Aux>\r\n        ,\r\n        document.getElementById('portal')\r\n    )\r\n}\r\n// function confirmModal( show, onDecline, onConfirm) {\r\n//     const confirm = new Promise((res) => {\r\n//         const submit = () => res(true)\r\n//         const decline = () => res(false)\r\n//         ReactDomrender(\r\n//             <modalConfirmDecline\r\n//                 isShown={show}\r\n//                 title=\"Delete?\"\r\n//                 content=\"\"\r\n//                 onSubmit={submit}\r\n//                 onDecline={decline}\r\n//             />\r\n//         )\r\n//     }).then((res) => {\r\n//         if(res) {\r\n//             console.log('DELETING')\r\n//         }else{\r\n//             console.log('CANCEL')\r\n//         }\r\n//     }).finally(() => console.log('REMOVE MODAL'))\r\n//     return confirm;\r\n// }\r\nexport default modalConfirmDecline;","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nconst SIZES = {\r\n    'sm':'--sm',\r\n    'small': '--sm'\r\n}\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type = \"delete\";\r\n        this.url =\"https://www.svgrepo.com/show/243868/delete.svg\";\r\n        this.size = SIZES[props.size] || '';\r\n    }\r\n    \r\n    render() {\r\n        const {clickHandler} = this.props\r\n        return(\r\n            <button className={`Button-icon${this.size}`} onClick={ clickHandler } form=\"none\">\r\n                <img alt={this.type} src={this.url}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\nexport class Delete extends Button {\r\n\r\n}\r\nexport class Edit extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type = \"edit\";\r\n        this.url =\"https://www.svgrepo.com/show/61278/edit.svg\";\r\n    }\r\n}\r\nexport class Undo extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type=\"undo\";\r\n        this.url =\"https://www.svgrepo.com/show/278483/undo.svg\"\r\n    }\r\n}\r\nexport class Redo extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type=\"redo\";\r\n        this.url =\"https://www.svgrepo.com/show/278479/redo.svg\"\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './Task.css';\r\nimport { Delete } from '../../Delete-btn/Button';\r\n\r\nconst task = ({ content, disabled, deleteHandler, checkHandler }) => {\r\n    return(\r\n        <li className=\"Task\">\r\n            <input checked={content.isChecked} value={content.isChecked} onChange={() => checkHandler(content.id)} id={content.id} disabled={disabled} type=\"checkbox\" from=\"none\"/>\r\n            <label htmlFor={content.id} className=\"Task__content\">{content.title}</label>\r\n            {disabled?'':  <Delete size=\"small\" clickHandler={() => deleteHandler(content.id)}/>}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default task;","import React from 'react';\r\nimport './TasksList.css';\r\nimport Task from './Task/Task';\r\nimport Aux from '../Helper/Axillury';\r\n\r\nconst tasksList = ({ tasks, disabled, deleteHandler, checkHandler }) => {\r\n    return(\r\n        <Aux>{\r\n            tasks.length> 0?\r\n            <ul className=\"TasksList\">\r\n                {tasks.map((task, index) => <Task disabled={disabled} content={task} deleteHandler={deleteHandler} checkHandler={checkHandler} key={task.id}/>)}\r\n            </ul>\r\n            :<h3 className=\"Utility__caption\">No tasks yet</h3>    \r\n        }</Aux>\r\n    )\r\n}\r\n\r\nexport default tasksList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TasksList from '../Tasks/TasksList';\r\nimport { Delete } from '../Delete-btn/Button';\r\n\r\nimport './NotePreview.css';\r\n\r\nconst notePreview = ({ content, deleteHandler }) => {\r\n    return ( \r\n        <li className=\"NotesList__element Utility__card\">\r\n            <h2 className=\"NotesList__element__title\">{content.title}</h2>\r\n                <TasksList disabled={true} tasks={content.tasks} />\r\n            <Delete className=\"NotesList__element__delete-btn\" clickHandler={deleteHandler}/>\r\n            <Link to={`/note/${content.id}`} className=\"NotesList__element__open-btn Utility__btn--success\">Open</Link>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default notePreview;","import React, { Component } from 'react';\r\nimport './NotesList.css';\r\nimport Aux from '../../Components/Helper/Axillury';\r\nimport ModalConfirmDecline  from '../../Components/Modal/Modal';\r\nimport NotePreview from '../../Components/NotePreview/NotePreview';\r\n\r\nclass NotesList extends Component {\r\n    state = { \r\n        notes: [],\r\n        showModal: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getNotesAndSetToState();\r\n    };\r\n\r\n    getNotesAndSetToState() {\r\n        let notes = JSON.parse(localStorage.getItem('notes'));\r\n        notes = notes? notes:[];\r\n        this.setState({ notes });\r\n    }\r\n    async deleteHandler(id) {\r\n        this.setState({showModal: true});\r\n        this.id = id;\r\n\r\n    }\r\n    declineHandler() {\r\n        this.setState({showModal: false})\r\n    }\r\n    confirmHandler() {\r\n        this.setState({showModal: false})\r\n        this.deleteNote(this.id)\r\n    }\r\n    deleteNote(id) {\r\n        const notes = this.state.notes;\r\n        const updatedNoted = notes.filter(note => note.id !== id)\r\n        localStorage.setItem('notes', JSON.stringify(updatedNoted))\r\n        this.setState({ notes: updatedNoted });\r\n    }\r\n    render() { \r\n        const notes = this.state.notes;\r\n        return ( \r\n            <Aux>\r\n                {notes.length > 0?\r\n                    <ul className=\"NotesList\">\r\n                        {notes.map((note, index) => <NotePreview content={note} deleteHandler={this.deleteHandler.bind(this, note.id)} key={index}/>)}\r\n                    </ul>\r\n                :<h2 className=\"Utility__caption\">There are no notes yet...</h2>}\r\n                <ModalConfirmDecline \r\n                    isShown={this.state.showModal}\r\n                    title=\"Delete\"\r\n                    \r\n                    onConfirm={this.confirmHandler.bind(this)}\r\n                    onDecline={this.declineHandler.bind(this)}\r\n                >Do you want to delete this note?</ModalConfirmDecline>\r\n            </Aux> \r\n        );\r\n    }\r\n};\r\n \r\nexport default NotesList;","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport NotesList from '../../Containers/NotesList/NotesList';\r\n\r\nconst home = (pops) => {\r\n    return(\r\n        <div className=\"Layout__main\"> \r\n             {/* <Link className=\"Utility__btn--success\" to=\"/note/new\">Create Note</Link> */}\r\n             <NotesList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default home;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './NoteForm.css';\r\nimport TasksList from '../../Components/Tasks/TasksList';\r\nimport { Undo, Redo } from '../../Components/Delete-btn/Button';\r\n\r\nclass NoteForm extends Component {\r\n    state = { \r\n        title: '',\r\n        tasks: [],\r\n        task: '',\r\n        history: [],\r\n        historyPointer: -1,\r\n        allowEditing: true,\r\n        allowAddingTasks: true,\r\n     };\r\n     \r\n     componentDidMount() {    \r\n        const match = this.props.match;\r\n        const id = match.params.id;\r\n        if(!id || id === 'new') return;\r\n        const noteData = this.getDataFromLocalStorage(id);\r\n        this.id = id;\r\n        this.setState({title: noteData.title, tasks: noteData.tasks, allowAddingTasks: false, allowEditing: false})\r\n        this.addToHistory({tasks: noteData.tasks});\r\n     }\r\n\r\n     getDataFromLocalStorage(id) {\r\n         const data = JSON.parse(localStorage.getItem('notes'));\r\n         return data.find((note) => note.id === id)\r\n     }\r\n\r\n    inputChangeHandler(event) {\r\n        const input = event.target;\r\n        const name = input.name;\r\n        this.setState({[name]: input.value})\r\n    };\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        let notes = JSON.parse(localStorage.getItem('notes'));\r\n        if(!notes) {\r\n            notes = [];\r\n        }\r\n        const note = {title: this.state.title, tasks: this.state.tasks};\r\n        const existingNoteIndex = notes.findIndex(exNote => exNote.id === this.id);\r\n        if(existingNoteIndex>=0) {\r\n            note.id = this.id;\r\n            notes[existingNoteIndex] = note;\r\n        } else {\r\n            note.id = Date.now().toString('16');\r\n            notes.push(note);\r\n        }\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n        this.props.history.push('/')\r\n    };\r\n    submitTaskHandler(ev) {\r\n        if(ev.key!=='Enter') return;\r\n        this.addTask();\r\n    }\r\n    addTask() {\r\n        const tasks = [...this.state.tasks];\r\n        tasks.push({title: this.state.task, id: Date.now().toString(16), isChecked: false});\r\n        this.setState({ tasks, task: '' });\r\n        this.addToHistory({ tasks });\r\n    }\r\n    deleteHandler(id) {\r\n        const tasks = [...this.state.tasks];\r\n        const newTasks = tasks.filter(task => task.id!==id);\r\n        this.setState({ tasks: newTasks })\r\n        this.addToHistory({ tasks: newTasks });\r\n    }\r\n    checkHandler(id) {\r\n        const tasks = [...this.state.tasks];\r\n        const taskIndex = tasks.findIndex((task) => task.id === id)\r\n        tasks[taskIndex].isChecked = !tasks[taskIndex].isChecked;\r\n        this.setState({ tasks })\r\n    }\r\n    addToHistory(obj) {\r\n        let {historyPointer} = this.state;\r\n        const history = this.state.history.slice(0, historyPointer+1);\r\n        historyPointer++;\r\n        history.push(obj)\r\n        this.setState({ history, historyPointer})\r\n    }\r\n    undoHandler() {\r\n        const history = [...this.state.history];\r\n        let {historyPointer} = this.state;\r\n        if(historyPointer - 1 < 0) {\r\n            return;\r\n        }\r\n        historyPointer--;\r\n        const tasks = [...history[historyPointer].tasks];\r\n        this.setState({ tasks, historyPointer });\r\n    }\r\n    redoHandler() {\r\n        const history = [...this.state.history];\r\n        let {historyPointer} = this.state;\r\n        if(historyPointer + 1 > history.length-1) {\r\n            return;\r\n        }\r\n        historyPointer++;\r\n        const tasks = [...history[historyPointer].tasks];\r\n        this.setState({ tasks, historyPointer });\r\n    }\r\n    render() { \r\n        const tasks = this.state.tasks;\r\n        const allowEditing = this.state.allowEditing;\r\n        const allowAddingTasks = this.state.allowAddingTasks;\r\n        const allowUndo = this.state.historyPointer > 0;\r\n        const allowRedo = this.state.historyPointer < this.state.history.length -1;\r\n        return ( \r\n            <form className=\"NoteForm Utility__card\" onSubmit={this.submitHandler.bind(this)}> \r\n                <div className=\"NoteForm__controls\">\r\n                    {allowUndo? <Undo clickHandler={this.undoHandler.bind(this)}/>: <div style={{width: \"2.3rem\"}}></div> }\r\n                    {allowRedo? <Redo clickHandler={this.redoHandler.bind(this)}/>: ' ' }\r\n                </div>\r\n                \r\n                <label className=\"NoteForm__field\" onClick={() => this.setState({allowEditing: true})}>\r\n                    Title:\r\n                    {allowEditing?\r\n                    <input className=\"NoteForm__field__input\" form=\"none\" onBlur={() => this.setState({allowEditing: false})} name=\"title\" value={this.state.title} onChange={this.inputChangeHandler.bind(this)}/>\r\n                    :<h3 className=\"NoteForm__title\">{this.state.title}<img alt=\"edit\" src=\"https://www.svgrepo.com/show/61278/edit.svg\"/></h3>\r\n                    }\r\n                </label>\r\n                <label className=\"NoteForm__field\">\r\n                    Tasks:\r\n                    </label>\r\n                    <div className=\"NoteForm__field\">\r\n                    {tasks.length > 0? <TasksList tasks={tasks} deleteHandler={this.deleteHandler.bind(this)} checkHandler={this.checkHandler.bind(this)}/>: null}\r\n                    {allowAddingTasks?\r\n                    <input className=\"NoteForm__field__input\" onBlur={() => this.setState({allowAddingTasks: false})}  onKeyDown={this.submitTaskHandler.bind(this)} name=\"task\" form=\"none\" value={this.state.task} onChange={this.inputChangeHandler.bind(this)}/>\r\n                    : <button onClick={()=>this.setState({allowAddingTasks:true})} className=\"NoteForm__btn Utility__btn--alert\">Add Task</button>}\r\n                    </div>\r\n                <input className=\"NoteForm__btn--right Utility__btn--success\" type=\"submit\" value=\"Save Changes\"/>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(NoteForm);","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport NoteForm from '../../Containers/NoteForm/NoteForm';\r\n\r\nfunction Note(props) {\r\n    const match = useRouteMatch();\r\n    return ( \r\n        <Switch>\r\n            <Route path={`${match.url}/new/clear`}>\r\n                <div className=\"Layout__main\">\r\n                    <Redirect to={`${match.url}/new`}/>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.url}/new`}>\r\n                <div className=\"Layout__main\">\r\n                    <NoteForm type=\"create\"/>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.url}/:id`}>\r\n                <div className=\"Layout__main\">\r\n                    <NoteForm type=\"edit\"/>\r\n                </div>\r\n            </Route>\r\n        </Switch>\r\n     );\r\n}\r\n \r\nexport default Note;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst header = props => (\r\n    <header className=\"Header\">\r\n        <nav className=\"Header__nav\">\r\n            <Link className=\"Header__nav__el\" to=\"/\">My Notes</Link>\r\n            <Link className=\"Header__nav__el\" to=\"/note/new/clear\">New Note</Link>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default  header;","import React from 'react';\r\nimport './App.css';\r\nimport {   BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Home from './routes/Home/Home';\r\nimport Note from './routes/Note/Note';\r\nimport Header from './Components/Header/Header';\r\n\r\nconst portal = document.createElement('div');\r\nportal.id=\"portal\"\r\ndocument.body.appendChild(portal)\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/note\">\r\n            <Note/>\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n             <Home/>\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}