{"version":3,"sources":["Components/Helper/Axillury.js","Components/Modal/Modal.js","Components/Button/Button.js","Context/TaskContext.js","Components/Tasks/Task/Task.js","Context/taskContextHoc.js","Components/Tasks/TasksList.js","Components/NotePreview/NotePreview.js","Containers/NotesList/NotesList.js","Containers/NoteForm/NoteForm.js","routes/Note.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","modalConfirmDecline","isShown","title","onConfirm","onDecline","ReactDom","createPortal","className","onClick","document","getElementById","SIZES","Button","type","url","size","clickHandler","this","form","alt","src","Component","Delete","Edit","Undo","Redo","CheckMark","React","createContext","withContext","TaskContext","Consumer","context","taskId","taskValue","inputHandler","updateTasksHandler","isEditable","content","disabled","deleteHandler","editHandler","checkHandler","id","checked","isChecked","value","onChange","from","onKeyDown","ev","key","autoFocus","name","onBlur","htmlFor","tasksList","tasks","length","map","task","notePreview","to","NotesList","state","notes","showModal","getNotesAndSetToState","JSON","parse","localStorage","getItem","setState","deleteNote","updatedNoted","filter","note","setItem","stringify","index","bind","confirmHandler","declineHandler","NoteForm","history","historyPointer","allowEditing","allowAddingTasks","currentEditableTaskId","currentEditableTask","match","params","getDataFromLocalStorage","addToHistory","find","event","input","target","editableId","editedTask","forEach","i","updatedTask","preventDefault","existingNoteIndex","findIndex","exNote","Date","now","toString","push","addTask","newTasks","taskIndex","obj","slice","allowUndo","allowRedo","onSubmit","submitHandler","undoHandler","style","width","redoHandler","inputChangeHandler","enterKeyPressOnTitle","Provider","setCurrentEditableTask","updateTasks","editTaskHandler","submitTaskHandler","withRouter","Note","useRouteMatch","path","header","portal","createElement","body","appendChild","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f255805a.chunk.js","sourcesContent":["const aux = props => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './Modal.css'\r\nimport Aux from '../Helper/Axillury';\r\n\r\n\r\nconst modalConfirmDecline = ({ isShown, title, children, onConfirm, onDecline }) => {\r\n    return ReactDom.createPortal(\r\n        <Aux>\r\n       {isShown?\r\n        <Aux>\r\n        <div className=\"Backdrop\"></div>\r\n        <div className=\"Modal Utility__card\">\r\n            <h2 className=\"Modal__title\">{title}</h2>\r\n            <p className=\"Modal_body\">{children}</p>\r\n            <div className=\"Modal__buttons\">\r\n                <button className=\"Utility__btn--danger\"onClick={onConfirm}>Delete</button>\r\n                <button  className=\"Utility__btn\" onClick={onDecline}>Cancel</button>\r\n            </div>\r\n        </div>\r\n        </Aux>\r\n        : ''}\r\n        </Aux>\r\n        ,\r\n        document.getElementById('portal')\r\n    )\r\n}\r\nexport default modalConfirmDecline;","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nconst SIZES = {\r\n    'sm':'--sm',\r\n    'small': '--sm'\r\n}\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type = \"delete\";\r\n        this.url =\"https://www.svgrepo.com/show/243868/delete.svg\";\r\n        this.size = SIZES[props.size] || '';\r\n    }\r\n    \r\n    render() {\r\n        let {clickHandler} = this.props\r\n        return(\r\n            <button className={`Button-icon${this.size}`} onClick={ clickHandler } form=\"none\">\r\n                <img alt={this.type} src={this.url}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\nexport class Delete extends Button {\r\n\r\n}\r\nexport class Edit extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type = \"edit\";\r\n        this.url =\"https://www.svgrepo.com/show/61278/edit.svg\";\r\n    }\r\n}\r\nexport class Undo extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type=\"undo\";\r\n        this.url =\"https://www.svgrepo.com/show/278483/undo.svg\"\r\n    }\r\n}\r\nexport class Redo extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type=\"redo\";\r\n        this.url =\"https://www.svgrepo.com/show/278479/redo.svg\"\r\n    }\r\n}\r\nexport class CheckMark extends Button {\r\n    constructor(props) {\r\n        super(props);\r\n        this.type=\"checkmark\";\r\n        this.url = \"https://www.svgrepo.com/show/225864/check-success.svg\";\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default React.createContext()","import React from 'react';\r\nimport './Task.css';\r\nimport { Delete, Edit, CheckMark } from '../../Button/Button';\r\nimport withContext from '../../../Context/taskContextHoc';\r\n\r\nconst task = ({ content, disabled, deleteHandler, editHandler, checkHandler, context }) => {\r\n    let taskId, taskValue, inputHandler, updateTasksHandler, isEditable;\r\n    if(!disabled) {\r\n        taskId = context.taskId;\r\n        taskValue = context.taskValue;\r\n        inputHandler = context.inputHandler;\r\n        updateTasksHandler = context.updateTasksHandler;\r\n        isEditable = taskId === content.id;\r\n    };\r\n\r\n    function submitTaskOnEnterHandler(ev) {\r\n        if(ev.key !== 'Enter') return;\r\n        updateTasksHandler();\r\n    };\r\n    return(\r\n        <li className=\"Task\">\r\n            <input className=\"Task__checkbox\" checked={content.isChecked} value={content.isChecked} onChange={() => checkHandler(content.id)} id={content.id} disabled={disabled} type=\"checkbox\" from=\"none\"/>\r\n            {isEditable?<input className=\"Task__input\" onKeyDown={submitTaskOnEnterHandler} autoFocus={true} name=\"currentEditableTask\" onBlur={updateTasksHandler} onChange={inputHandler} value={taskValue}/>:<label htmlFor={content.id} className=\"Task__content\">{content.title}</label>}\r\n            {disabled?'':   \r\n            <div className=\"Task__buttons\">\r\n                {isEditable?<CheckMark size=\"small\" clickHandler={() => updateTasksHandler()}/>:<Edit size=\"small\" clickHandler={editHandler}/>}\r\n                <Delete size=\"small\" clickHandler={() => deleteHandler(content.id)}/>\r\n            </div>}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default withContext(task);","import React from 'react';\r\nimport TaskContext from './TaskContext';\r\n\r\nconst withContext = (Component) => {\r\n    return (props) => (\r\n        <TaskContext.Consumer>    \r\n             {(context) => {\r\n                return <Component {...props} context={context} />\r\n             }}\r\n        </TaskContext.Consumer>\r\n    )\r\n }\r\n\r\n export default withContext;","import React from 'react';\r\nimport './TasksList.css';\r\nimport Task from './Task/Task';\r\nimport Aux from '../Helper/Axillury';\r\n\r\nconst tasksList = ({ tasks, disabled, deleteHandler, editHandler, checkHandler }) => {\r\n    return(\r\n        <Aux>{\r\n            tasks.length> 0?\r\n            <ul className=\"TasksList\">\r\n                {tasks.map(task => <Task disabled={disabled} content={task} deleteHandler={deleteHandler} editHandler={() => editHandler(task.id, task.title)} checkHandler={checkHandler} key={task.id}/>)}\r\n            </ul>\r\n            :<h3 className=\"Utility__caption\">No tasks yet</h3>    \r\n        }</Aux>\r\n    )\r\n}\r\n\r\nexport default tasksList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TasksList from '../Tasks/TasksList';\r\nimport { Delete } from '../Button/Button';\r\n\r\nimport './NotePreview.css';\r\n\r\nconst notePreview = ({ content, deleteHandler }) => {\r\n    return ( \r\n        <li className=\"NotesList__element Utility__card\">\r\n            <h2 className=\"NotesList__element__title\">{content.title}</h2>\r\n                <TasksList disabled={true} tasks={content.tasks} />\r\n            <Delete className=\"NotesList__element__delete-btn\" clickHandler={deleteHandler}/>\r\n            <Link to={`/note/${content.id}`} className=\"NotesList__element__open-btn Utility__btn--success\">Open</Link>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default notePreview;","import React, { Component } from 'react';\r\nimport './NotesList.css';\r\nimport Aux from '../../Components/Helper/Axillury';\r\nimport ModalConfirmDecline  from '../../Components/Modal/Modal';\r\nimport NotePreview from '../../Components/NotePreview/NotePreview';\r\n\r\nclass NotesList extends Component {\r\n    state = { \r\n        notes: [],\r\n        showModal: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getNotesAndSetToState();\r\n    };\r\n\r\n    getNotesAndSetToState() {\r\n        let notes = JSON.parse(localStorage.getItem('notes'));\r\n        notes = notes? notes:[];\r\n        this.setState({ notes });\r\n    }\r\n    async deleteHandler(id) {\r\n        this.setState({showModal: true});\r\n        this.id = id;\r\n\r\n    }\r\n    declineHandler() {\r\n        this.setState({showModal: false})\r\n    }\r\n    confirmHandler() {\r\n        this.setState({showModal: false})\r\n        this.deleteNote(this.id)\r\n    }\r\n    deleteNote(id) {\r\n        const notes = this.state.notes;\r\n        const updatedNoted = notes.filter(note => note.id !== id)\r\n        localStorage.setItem('notes', JSON.stringify(updatedNoted))\r\n        this.setState({ notes: updatedNoted });\r\n    }\r\n    render() { \r\n        const notes = this.state.notes;\r\n        return ( \r\n            <Aux>\r\n                {notes.length > 0?\r\n                    <ul className=\"NotesList\">\r\n                        {notes.map((note, index) => <NotePreview content={note} deleteHandler={this.deleteHandler.bind(this, note.id)} key={index}/>)}\r\n                    </ul>\r\n                :<h2 className=\"Utility__caption\">There are no notes yet...</h2>}\r\n                <ModalConfirmDecline \r\n                    isShown={this.state.showModal}\r\n                    title=\"Delete\"\r\n                    \r\n                    onConfirm={this.confirmHandler.bind(this)}\r\n                    onDecline={this.declineHandler.bind(this)}\r\n                >Do you want to delete this note?</ModalConfirmDecline>\r\n            </Aux> \r\n        );\r\n    }\r\n};\r\n \r\nexport default NotesList;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './NoteForm.css';\r\nimport TasksList from '../../Components/Tasks/TasksList';\r\nimport { Undo, Redo } from '../../Components/Button/Button';\r\nimport TaskContext from '../../Context/TaskContext';\r\n\r\nclass NoteForm extends Component {\r\n    state = { \r\n        title: '',\r\n        tasks: [],\r\n        task: '',\r\n        history: [],\r\n        historyPointer: -1,\r\n        allowEditing: true,\r\n        allowAddingTasks: true,\r\n        currentEditableTaskId: 0,\r\n        currentEditableTask: ''\r\n     };\r\n     \r\n     componentDidMount() {    \r\n        const match = this.props.match;\r\n        const id = match.params.id;\r\n        if(!id || id === 'new') return;\r\n        const note = this.getDataFromLocalStorage(id);\r\n        this.id = id;\r\n        this.setState({title: note.title, tasks: note.tasks, allowAddingTasks: false, allowEditing: false})\r\n        this.addToHistory({tasks: note.tasks});\r\n     }\r\n\r\n     getDataFromLocalStorage(id) {\r\n         const data = JSON.parse(localStorage.getItem('notes'));\r\n         return data.find((note) => note.id === id)\r\n     }\r\n\r\n    inputChangeHandler(event) {\r\n        const input = event.target;\r\n        const name = input.name;\r\n        this.setState({[name]: input.value})\r\n    };\r\n    setCurrentEditableTask(event) {\r\n        const { value } = event.target;\r\n        this.setState({ currentEditableTask: value })\r\n    }\r\n\r\n    updateTasks() {\r\n        const editableId = this.state.currentEditableTaskId;\r\n        const editedTask = this.state.currentEditableTask;\r\n        const tasks = [...this.state.tasks];\r\n        let index;\r\n        tasks.forEach((task, i) => {\r\n            if(task.id === editableId) {\r\n                index = i;\r\n                return;\r\n            }\r\n        })\r\n        const updatedTask = {\r\n            title: editedTask,\r\n            id: editableId,\r\n            isChecked: false\r\n        };\r\n        if(tasks[index].title !== updatedTask.title) {\r\n            tasks[index] = updatedTask;\r\n            this.addToHistory({ tasks });\r\n            this.setState({ tasks, currentEditableTask:'', currentEditableTaskId: 0 })\r\n            return;\r\n        }\r\n        this.setState({ currentEditableTask:'', currentEditableTaskId: 0 })\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        let notes = JSON.parse(localStorage.getItem('notes'));\r\n        if(!notes) {\r\n            notes = [];\r\n        }\r\n        const note = {title: this.state.title, tasks: this.state.tasks};\r\n        const existingNoteIndex = notes.findIndex(exNote => exNote.id === this.id);\r\n        if(existingNoteIndex>=0) {\r\n            note.id = this.id;\r\n            notes[existingNoteIndex] = note;\r\n        } else {\r\n            note.id = Date.now().toString('16');\r\n            notes.push(note);\r\n        }\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n        this.props.history.push('/')\r\n    };\r\n    submitTaskHandler(ev) {\r\n        if(ev.key!=='Enter') return;\r\n        this.addTask();\r\n    }\r\n    addTask() {\r\n        const tasks = [...this.state.tasks];\r\n        tasks.push({title: this.state.task, id: Date.now().toString(16), isChecked: false});\r\n        this.setState({ tasks, task: '' });\r\n        this.addToHistory({ tasks });\r\n    }\r\n    deleteHandler(id) {\r\n        const tasks = [...this.state.tasks];\r\n        const newTasks = tasks.filter(task => task.id!==id);\r\n        this.setState({ tasks: newTasks })\r\n        this.addToHistory({ tasks: newTasks });\r\n    }\r\n\r\n    editTaskHandler(id, value) {\r\n        let { currentEditableTaskId, currentEditableTask } = this.state;\r\n        currentEditableTaskId = id;\r\n        currentEditableTask = value;\r\n        this.setState({ currentEditableTaskId, currentEditableTask });\r\n    }\r\n\r\n    checkHandler(id) {\r\n        const tasks = [...this.state.tasks];\r\n        const taskIndex = tasks.findIndex((task) => task.id === id)\r\n        tasks[taskIndex].isChecked = !tasks[taskIndex].isChecked;\r\n        this.setState({ tasks })\r\n    }\r\n    addToHistory(obj) {\r\n        let {historyPointer} = this.state;\r\n        const history = this.state.history.slice(0, historyPointer+1);\r\n        historyPointer++;\r\n        history.push(obj)\r\n        this.setState({ history, historyPointer})\r\n    }\r\n    undoHandler() {\r\n        const history = [...this.state.history];\r\n        let {historyPointer} = this.state;\r\n        if(historyPointer - 1 < 0) {\r\n            return;\r\n        }\r\n        historyPointer--;\r\n        const tasks = [...history[historyPointer].tasks];\r\n        this.setState({ tasks, historyPointer });\r\n    }\r\n    redoHandler() {\r\n        const history = [...this.state.history];\r\n        let {historyPointer} = this.state;\r\n        if(historyPointer + 2 > history.length) {\r\n            return;\r\n        }\r\n        historyPointer++;\r\n        const tasks = [...history[historyPointer].tasks];\r\n        this.setState({ tasks, historyPointer });\r\n    }\r\n    enterKeyPressOnTitle(ev) {\r\n        if(ev.key !== 'Enter') return;\r\n        this.setState({allowEditing: false})\r\n    }\r\n    render() { \r\n        const tasks = this.state.tasks;\r\n        const allowEditing = this.state.allowEditing;\r\n        const allowAddingTasks = this.state.allowAddingTasks;\r\n        const allowUndo = this.state.historyPointer > 0;\r\n        const allowRedo = this.state.historyPointer < this.state.history.length -1;\r\n        return ( \r\n            <form className=\"NoteForm Utility__card\" onSubmit={this.submitHandler.bind(this)}> \r\n                <div className=\"NoteForm__controls\">\r\n                    {allowUndo? <Undo clickHandler={this.undoHandler.bind(this)}/>: <div style={{width: \"2.3rem\"}}></div> }\r\n                    {allowRedo? <Redo clickHandler={this.redoHandler.bind(this)}/>: ' ' }\r\n                </div>\r\n                \r\n                <label className=\"NoteForm__field\" onClick={() => this.setState({allowEditing: true})}>\r\n                    Title:\r\n                    {allowEditing?\r\n                    <input autoFocus={allowEditing} \r\n                        className=\"NoteForm__field__input\"\r\n                        form=\"none\" onBlur={() => this.setState({allowEditing: false})} \r\n                        name=\"title\"\r\n                        value={this.state.title} \r\n                        onChange={this.inputChangeHandler.bind(this)} \r\n                        onKeyDown={this.enterKeyPressOnTitle.bind(this)}\r\n                    />\r\n                    :<h3 className=\"NoteForm__title\">{this.state.title}<img alt=\"edit\" src=\"https://www.svgrepo.com/show/61278/edit.svg\"/></h3>\r\n                    }\r\n                </label>\r\n                <label className=\"NoteForm__field\">\r\n                    Tasks:\r\n                    </label>\r\n                    <div className=\"NoteForm__field\">\r\n                        <TaskContext.Provider \r\n                        value={{\r\n                            taskId:this.state.currentEditableTaskId, \r\n                            taskValue: this.state.currentEditableTask, \r\n                            inputHandler: this.setCurrentEditableTask.bind(this),\r\n                            updateTasksHandler: this.updateTasks.bind(this)\r\n                        }}>\r\n                             {tasks.length > 0? <TasksList tasks={tasks} deleteHandler={this.deleteHandler.bind(this)} checkHandler={this.checkHandler.bind(this)} editHandler={this.editTaskHandler.bind(this)}/>: null}\r\n                        </TaskContext.Provider>\r\n                    {allowAddingTasks?\r\n                    <input \r\n                        autoFocus={!allowEditing} \r\n                        className=\"NoteForm__field__input\" \r\n                        onBlur={() => this.setState({allowAddingTasks: false})}  \r\n                        onKeyDown={this.submitTaskHandler.bind(this)} \r\n                        name=\"task\" \r\n                        form=\"none\" \r\n                        value={this.state.task} \r\n                        onChange={this.inputChangeHandler.bind(this)}\r\n                    />\r\n                    : <button onClick={()=>this.setState({allowAddingTasks:true})} className=\"NoteForm__btn Utility__btn--alert\">Add Task</button>}\r\n                    </div>\r\n                <input className=\"NoteForm__btn--right Utility__btn--success\" type=\"submit\" value=\"Save Changes\"/>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(NoteForm);","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport NoteForm from '../Containers/NoteForm/NoteForm';\r\n\r\nfunction Note() {\r\n    const match = useRouteMatch();\r\n    return ( \r\n        <Switch>\r\n            <Route path={`${match.url}/new/clear`}>\r\n                <div className=\"Layout__main\">\r\n                    <Redirect to={`${match.url}/new`}/>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.url}/new`}>\r\n                <div className=\"Layout__main\">\r\n                    <NoteForm type=\"create\"/>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.url}/:id`}>\r\n                <div className=\"Layout__main\">\r\n                    <NoteForm type=\"edit\"/>\r\n                </div>\r\n            </Route>\r\n        </Switch>\r\n     );\r\n}\r\n \r\nexport default Note;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst header = props => (\r\n    <header className=\"Header\">\r\n        <nav className=\"Header__nav\">\r\n            <Link className=\"Header__nav__el\" to=\"/\">My Notes</Link>\r\n            <Link className=\"Header__nav__el\" to=\"/note/new/clear\">New Note</Link>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default  header;","import React from 'react';\r\nimport './App.css';\r\nimport {   BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport NotesList from './Containers/NotesList/NotesList';\r\nimport Note from './routes/Note';\r\nimport Header from './Components/Header/Header';\r\n\r\nconst portal = document.createElement('div');\r\nportal.id=\"portal\"\r\ndocument.body.appendChild(portal)\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n        <Header/>\r\n        \r\n        <Switch>\r\n          <Route path=\"/note\">\r\n            <Note/>\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n            <div className=\"Layout__main\"> \r\n              <NotesList/>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}